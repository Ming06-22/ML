{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"RNN","provenance":[],"collapsed_sections":[],"mount_file_id":"1_Svq3n_tic2_rTPS2WHwUnmAtX7jlmVu","authorship_tag":"ABX9TyM+6nArbF0CLjlubzjIGOZ/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["# Unzip foreign exchange file"],"metadata":{"id":"DSwAsQ-FWeyq"}},{"cell_type":"code","source":["! unzip /content/drive/MyDrive/ML/foreign_exchange.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YGLDLkaPWIol","executionInfo":{"status":"ok","timestamp":1656660739978,"user_tz":-480,"elapsed":1110,"user":{"displayName":"余明昌","userId":"16390494860865880575"}},"outputId":"a14dc099-b97d-478c-cb25-c0d43a2d7180"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  /content/drive/MyDrive/ML/foreign_exchange.zip\n","  inflating: foreign_exchange.csv    \n"]}]},{"cell_type":"markdown","source":["# Download font"],"metadata":{"id":"_eUvJfHIhGld"}},{"cell_type":"code","source":["!wget -O TaipeiSansTCBeta-Regular.ttf https://drive.google.com/uc?id=1eGAsTN1HBpJAkeVM57_C7ccp7hbgSz3_&export=download\n","\n","from matplotlib.font_manager import fontManager\n","fontManager.addfont('TaipeiSansTCBeta-Regular.ttf')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TvwI-Nn3hFJd","executionInfo":{"status":"ok","timestamp":1656660747359,"user_tz":-480,"elapsed":2197,"user":{"displayName":"余明昌","userId":"16390494860865880575"}},"outputId":"556debaa-0cfb-400a-956a-51dc0bd7e6d8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-07-01 07:32:25--  https://drive.google.com/uc?id=1eGAsTN1HBpJAkeVM57_C7ccp7hbgSz3_\n","Resolving drive.google.com (drive.google.com)... 142.250.141.100, 142.250.141.113, 142.250.141.139, ...\n","Connecting to drive.google.com (drive.google.com)|142.250.141.100|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://doc-0k-9o-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/94bi0soqh0a7lto4mcfjokihoqsld0at/1656660675000/02847987870453524430/*/1eGAsTN1HBpJAkeVM57_C7ccp7hbgSz3_?uuid=db61d468-202a-4e7d-9ea7-113b73825f8f [following]\n","Warning: wildcards not supported in HTTP.\n","--2022-07-01 07:32:26--  https://doc-0k-9o-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/94bi0soqh0a7lto4mcfjokihoqsld0at/1656660675000/02847987870453524430/*/1eGAsTN1HBpJAkeVM57_C7ccp7hbgSz3_?uuid=db61d468-202a-4e7d-9ea7-113b73825f8f\n","Resolving doc-0k-9o-docs.googleusercontent.com (doc-0k-9o-docs.googleusercontent.com)... 142.251.2.132, 2607:f8b0:4023:c0d::84\n","Connecting to doc-0k-9o-docs.googleusercontent.com (doc-0k-9o-docs.googleusercontent.com)|142.251.2.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 20659344 (20M) [application/x-font-ttf]\n","Saving to: ‘TaipeiSansTCBeta-Regular.ttf’\n","\n","TaipeiSansTCBeta-Re 100%[===================>]  19.70M  --.-KB/s    in 0.08s   \n","\n","2022-07-01 07:32:26 (246 MB/s) - ‘TaipeiSansTCBeta-Regular.ttf’ saved [20659344/20659344]\n","\n"]}]},{"cell_type":"markdown","source":["# Use pandas to display USD/NT exchange"],"metadata":{"id":"ncfl6DFlXxK5"}},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"4_gaaM6sprgf","executionInfo":{"status":"ok","timestamp":1656660751083,"user_tz":-480,"elapsed":970,"user":{"displayName":"余明昌","userId":"16390494860865880575"}},"outputId":"7507575e-505e-4724-bf2c-97698e0b6556"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbc6a63b510>"]},"metadata":{},"execution_count":3},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import matplotlib\n","\n","matplotlib.rc('font', family='Taipei Sans TC Beta')\n","plt.rcParams[\"axes.unicode_minus\"] = False\n","\n","filename = \"foreign_exchange.csv\"\n","df = pd.read_csv(filename, encoding = \"big5\")\n","df.plot(kind = \"line\", figsize = (12, 6), x = \"日期\", y = [\"美元／新台幣\"])"]},{"cell_type":"markdown","source":["# Training RNN model"],"metadata":{"id":"QhpABcx-yBlz"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import MinMaxScaler\n","from keras.models import Sequential\n","from keras.layers import SimpleRNN, Dropout, Dense\n","import matplotlib\n","\n","# set graph's font\n","matplotlib.rc('font', family='Taipei Sans TC Beta')\n","# display negative normally\n","plt.rcParams[\"axes.unicode_minus\"] = False\n","# cancel display pandas reset alarm\n","pd.options.mode.chained_assignment = None\n","\n","# import csv data\n","filename = \"foreign_exchange.csv\"\n","df = pd.read_csv(filename, encoding = \"big5\")\n","USD = pd.DataFrame(df[\"美元／新台幣\"])\n","# convert from dataframe to float, fitting training data type\n","data_all = np.array(USD).astype(float)\n","print(\"Data's shape: \", data_all.shape)\n","\n","# scale data between 0 and 1\n","scaler = MinMaxScaler()\n","data_all = scaler.fit_transform(data_all)\n","\n","# store every eight days' data in list\n","TIME_STEPS = 7\n","data = []\n","for i in range(len(data_all) - TIME_STEPS):\n","  data.append(data_all[i: i + TIME_STEPS + 1])\n","\n","# set x is the first seven days, y is the last day\n","reshaped_data = np.array(data).astype(\"float64\")\n","x = reshaped_data[:, : -1]\n","y = reshaped_data[:, -1]\n","print(\"x's shape: \", x.shape, \", y's shape: \", y.shape)\n","\n","# the first 80% is train features and labels, the last 20% is test features and labels\n","split = 0.8\n","split_boundary = int(reshaped_data.shape[0] * split)\n","train_x = x[: split_boundary]\n","test_x = x[split_boundary:]\n","train_y = y[: split_boundary]\n","test_y = y[split_boundary:]\n","print(\"Train_x's shape: \", train_x.shape, \", test_x's shape: \", test_x.shape)\n","print(\"Train_y's shape: \", train_y.shape, \", test_y's shape: \", test_y.shape)\n","\n","# construct model\n","model = Sequential()\n","\n","# load existed model's weight\n","try:\n","  model.load_weights(\"RNN_model.weight\")\n","  print(\"Load model success, kepp training model.\")\n","except:\n","  print(\"Load model failed, train a new model.\")\n","\n","# construct simple CNN layer\n","INPUT_SIZE = 1\n","model.add(SimpleRNN(input_shape = (TIME_STEPS, INPUT_SIZE), units = 256, unroll = False))\n","# construct dropout\n","model.add(Dropout(0.2))\n","# construct output layer\n","model.add(Dense(units = 1))\n","# display thr model\n","model.summary()\n","\n","# set the training mode\n","model.compile(loss = \"mse\", optimizer = \"adam\", metrics = [\"accuracy\"])\n","\n","# start training model\n","model.fit(train_x, train_y, batch_size = 200, epochs = 100, validation_split = 0.1, verbose = 2)\n","\n","# do prediction on test data\n","predict = model.predict(test_x)\n","print(\"\\nThe first ten predictions:\\n\", predict[0: 10])\n","\n","# store model\n","model.save(\"RNN_model.h5\")\n","model.save_weights(\"RNN_model.weight\")\n","print(\"Model and weight have stored.\")\n","del model\n","\n","# convert to one-dimension array\n","predict = np.reshape(predict, (predict.size, ))\n","# inverse the data\n","predict_y = scaler.inverse_transform([[i] for i in predict])\n","test_y = scaler.inverse_transform(test_y)\n","print(\"\\nThe first ten predictions:\\n\", predict_y[0: 10])\n","print(\"\\nThe first ten test data:\\n\", test_y[0: 10])\n","\n","# display the graph\n","plt.plot(predict_y, \"b:\")\n","plt.plot(test_y, \"r-\")\n","plt.legend([\"預測\", \"美金匯率\"])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"qM9rTvyzX62V","executionInfo":{"status":"ok","timestamp":1656662426486,"user_tz":-480,"elapsed":8659,"user":{"displayName":"余明昌","userId":"16390494860865880575"}},"outputId":"1097659c-e0fc-4653-96bd-fd3498351039"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Data's shape:  (361, 1)\n","x's shape:  (354, 7, 1) , y's shape:  (354, 1)\n","Train_x's shape:  (283, 7, 1) , test_x's shape:  (71, 7, 1)\n","Train_y's shape:  (283, 1) , test_y's shape:  (71, 1)\n","Load model failed, train a new model.\n","Model: \"sequential_9\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," simple_rnn_9 (SimpleRNN)    (None, 256)               66048     \n","                                                                 \n"," dropout_9 (Dropout)         (None, 256)               0         \n","                                                                 \n"," dense_9 (Dense)             (None, 1)                 257       \n","                                                                 \n","=================================================================\n","Total params: 66,305\n","Trainable params: 66,305\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/100\n","2/2 - 1s - loss: 0.0579 - accuracy: 0.0039 - val_loss: 0.0041 - val_accuracy: 0.0000e+00 - 1s/epoch - 687ms/step\n","Epoch 2/100\n","2/2 - 0s - loss: 0.0265 - accuracy: 0.0039 - val_loss: 0.0230 - val_accuracy: 0.0000e+00 - 61ms/epoch - 31ms/step\n","Epoch 3/100\n","2/2 - 0s - loss: 0.0093 - accuracy: 0.0039 - val_loss: 0.0367 - val_accuracy: 0.0000e+00 - 57ms/epoch - 29ms/step\n","Epoch 4/100\n","2/2 - 0s - loss: 0.0151 - accuracy: 0.0039 - val_loss: 0.0228 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 5/100\n","2/2 - 0s - loss: 0.0063 - accuracy: 0.0039 - val_loss: 0.0091 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 6/100\n","2/2 - 0s - loss: 0.0039 - accuracy: 0.0039 - val_loss: 0.0046 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 7/100\n","2/2 - 0s - loss: 0.0068 - accuracy: 0.0039 - val_loss: 0.0055 - val_accuracy: 0.0000e+00 - 58ms/epoch - 29ms/step\n","Epoch 8/100\n","2/2 - 0s - loss: 0.0053 - accuracy: 0.0039 - val_loss: 0.0101 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 9/100\n","2/2 - 0s - loss: 0.0033 - accuracy: 0.0039 - val_loss: 0.0147 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 10/100\n","2/2 - 0s - loss: 0.0037 - accuracy: 0.0039 - val_loss: 0.0161 - val_accuracy: 0.0000e+00 - 61ms/epoch - 30ms/step\n","Epoch 11/100\n","2/2 - 0s - loss: 0.0045 - accuracy: 0.0039 - val_loss: 0.0136 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 12/100\n","2/2 - 0s - loss: 0.0033 - accuracy: 0.0039 - val_loss: 0.0096 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 13/100\n","2/2 - 0s - loss: 0.0023 - accuracy: 0.0039 - val_loss: 0.0064 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 14/100\n","2/2 - 0s - loss: 0.0026 - accuracy: 0.0039 - val_loss: 0.0049 - val_accuracy: 0.0000e+00 - 57ms/epoch - 29ms/step\n","Epoch 15/100\n","2/2 - 0s - loss: 0.0030 - accuracy: 0.0039 - val_loss: 0.0052 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 16/100\n","2/2 - 0s - loss: 0.0023 - accuracy: 0.0039 - val_loss: 0.0065 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 17/100\n","2/2 - 0s - loss: 0.0023 - accuracy: 0.0039 - val_loss: 0.0080 - val_accuracy: 0.0000e+00 - 62ms/epoch - 31ms/step\n","Epoch 18/100\n","2/2 - 0s - loss: 0.0021 - accuracy: 0.0039 - val_loss: 0.0085 - val_accuracy: 0.0000e+00 - 58ms/epoch - 29ms/step\n","Epoch 19/100\n","2/2 - 0s - loss: 0.0024 - accuracy: 0.0039 - val_loss: 0.0077 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 20/100\n","2/2 - 0s - loss: 0.0020 - accuracy: 0.0039 - val_loss: 0.0061 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 21/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0047 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 22/100\n","2/2 - 0s - loss: 0.0019 - accuracy: 0.0039 - val_loss: 0.0040 - val_accuracy: 0.0000e+00 - 55ms/epoch - 28ms/step\n","Epoch 23/100\n","2/2 - 0s - loss: 0.0018 - accuracy: 0.0039 - val_loss: 0.0040 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 24/100\n","2/2 - 0s - loss: 0.0017 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 25/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0051 - val_accuracy: 0.0000e+00 - 50ms/epoch - 25ms/step\n","Epoch 26/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0052 - val_accuracy: 0.0000e+00 - 59ms/epoch - 30ms/step\n","Epoch 27/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0048 - val_accuracy: 0.0000e+00 - 74ms/epoch - 37ms/step\n","Epoch 28/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0041 - val_accuracy: 0.0000e+00 - 57ms/epoch - 28ms/step\n","Epoch 29/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0035 - val_accuracy: 0.0000e+00 - 53ms/epoch - 27ms/step\n","Epoch 30/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0034 - val_accuracy: 0.0000e+00 - 53ms/epoch - 27ms/step\n","Epoch 31/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0034 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 32/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0035 - val_accuracy: 0.0000e+00 - 57ms/epoch - 29ms/step\n","Epoch 33/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0033 - val_accuracy: 0.0000e+00 - 53ms/epoch - 27ms/step\n","Epoch 34/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0032 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 35/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0032 - val_accuracy: 0.0000e+00 - 60ms/epoch - 30ms/step\n","Epoch 36/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0030 - val_accuracy: 0.0000e+00 - 50ms/epoch - 25ms/step\n","Epoch 37/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0028 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 38/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0027 - val_accuracy: 0.0000e+00 - 63ms/epoch - 31ms/step\n","Epoch 39/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0027 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 40/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0026 - val_accuracy: 0.0000e+00 - 57ms/epoch - 28ms/step\n","Epoch 41/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0027 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 42/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0027 - val_accuracy: 0.0000e+00 - 53ms/epoch - 27ms/step\n","Epoch 43/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0025 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 44/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 67ms/epoch - 33ms/step\n","Epoch 45/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 46/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0026 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 47/100\n","2/2 - 0s - loss: 9.5740e-04 - accuracy: 0.0039 - val_loss: 0.0027 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 48/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0025 - val_accuracy: 0.0000e+00 - 58ms/epoch - 29ms/step\n","Epoch 49/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 50ms/epoch - 25ms/step\n","Epoch 50/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 51/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 52/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 51ms/epoch - 25ms/step\n","Epoch 53/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0026 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 54/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 55/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 55ms/epoch - 28ms/step\n","Epoch 56/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 51ms/epoch - 25ms/step\n","Epoch 57/100\n","2/2 - 0s - loss: 9.7401e-04 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 55ms/epoch - 28ms/step\n","Epoch 58/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 53ms/epoch - 26ms/step\n","Epoch 59/100\n","2/2 - 0s - loss: 9.9427e-04 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 57ms/epoch - 28ms/step\n","Epoch 60/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 61/100\n","2/2 - 0s - loss: 9.0371e-04 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 64ms/epoch - 32ms/step\n","Epoch 62/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 63/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 50ms/epoch - 25ms/step\n","Epoch 64/100\n","2/2 - 0s - loss: 9.8397e-04 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 49ms/epoch - 25ms/step\n","Epoch 65/100\n","2/2 - 0s - loss: 9.9019e-04 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 59ms/epoch - 29ms/step\n","Epoch 66/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 67/100\n","2/2 - 0s - loss: 9.8224e-04 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 68/100\n","2/2 - 0s - loss: 9.3290e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 53ms/epoch - 27ms/step\n","Epoch 69/100\n","2/2 - 0s - loss: 9.9138e-04 - accuracy: 0.0039 - val_loss: 0.0019 - val_accuracy: 0.0000e+00 - 53ms/epoch - 26ms/step\n","Epoch 70/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 71/100\n","2/2 - 0s - loss: 9.4692e-04 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 72/100\n","2/2 - 0s - loss: 9.9758e-04 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 55ms/epoch - 28ms/step\n","Epoch 73/100\n","2/2 - 0s - loss: 9.7860e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 74/100\n","2/2 - 0s - loss: 9.8370e-04 - accuracy: 0.0039 - val_loss: 0.0019 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 75/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 76/100\n","2/2 - 0s - loss: 9.2436e-04 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 58ms/epoch - 29ms/step\n","Epoch 77/100\n","2/2 - 0s - loss: 8.8047e-04 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 57ms/epoch - 28ms/step\n","Epoch 78/100\n","2/2 - 0s - loss: 9.7978e-04 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 68ms/epoch - 34ms/step\n","Epoch 79/100\n","2/2 - 0s - loss: 9.3050e-04 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 58ms/epoch - 29ms/step\n","Epoch 80/100\n","2/2 - 0s - loss: 9.2186e-04 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 53ms/epoch - 26ms/step\n","Epoch 81/100\n","2/2 - 0s - loss: 9.8840e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 56ms/epoch - 28ms/step\n","Epoch 82/100\n","2/2 - 0s - loss: 9.3486e-04 - accuracy: 0.0039 - val_loss: 0.0018 - val_accuracy: 0.0000e+00 - 53ms/epoch - 26ms/step\n","Epoch 83/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0017 - val_accuracy: 0.0000e+00 - 53ms/epoch - 26ms/step\n","Epoch 84/100\n","2/2 - 0s - loss: 9.9439e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 55ms/epoch - 28ms/step\n","Epoch 85/100\n","2/2 - 0s - loss: 9.1670e-04 - accuracy: 0.0039 - val_loss: 0.0023 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 86/100\n","2/2 - 0s - loss: 9.7149e-04 - accuracy: 0.0039 - val_loss: 0.0022 - val_accuracy: 0.0000e+00 - 52ms/epoch - 26ms/step\n","Epoch 87/100\n","2/2 - 0s - loss: 8.9461e-04 - accuracy: 0.0039 - val_loss: 0.0019 - val_accuracy: 0.0000e+00 - 70ms/epoch - 35ms/step\n","Epoch 88/100\n","2/2 - 0s - loss: 9.5449e-04 - accuracy: 0.0039 - val_loss: 0.0018 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 89/100\n","2/2 - 0s - loss: 8.3593e-04 - accuracy: 0.0039 - val_loss: 0.0019 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 90/100\n","2/2 - 0s - loss: 8.9290e-04 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 91/100\n","2/2 - 0s - loss: 8.6278e-04 - accuracy: 0.0039 - val_loss: 0.0021 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 92/100\n","2/2 - 0s - loss: 9.4590e-04 - accuracy: 0.0039 - val_loss: 0.0018 - val_accuracy: 0.0000e+00 - 58ms/epoch - 29ms/step\n","Epoch 93/100\n","2/2 - 0s - loss: 9.7278e-04 - accuracy: 0.0039 - val_loss: 0.0018 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","Epoch 94/100\n","2/2 - 0s - loss: 9.0855e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 55ms/epoch - 27ms/step\n","Epoch 95/100\n","2/2 - 0s - loss: 9.0836e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 62ms/epoch - 31ms/step\n","Epoch 96/100\n","2/2 - 0s - loss: 8.8536e-04 - accuracy: 0.0039 - val_loss: 0.0019 - val_accuracy: 0.0000e+00 - 50ms/epoch - 25ms/step\n","Epoch 97/100\n","2/2 - 0s - loss: 8.8099e-04 - accuracy: 0.0039 - val_loss: 0.0018 - val_accuracy: 0.0000e+00 - 59ms/epoch - 30ms/step\n","Epoch 98/100\n","2/2 - 0s - loss: 8.1725e-04 - accuracy: 0.0039 - val_loss: 0.0017 - val_accuracy: 0.0000e+00 - 57ms/epoch - 28ms/step\n","Epoch 99/100\n","2/2 - 0s - loss: 8.0486e-04 - accuracy: 0.0039 - val_loss: 0.0018 - val_accuracy: 0.0000e+00 - 51ms/epoch - 26ms/step\n","Epoch 100/100\n","2/2 - 0s - loss: 8.4486e-04 - accuracy: 0.0039 - val_loss: 0.0020 - val_accuracy: 0.0000e+00 - 54ms/epoch - 27ms/step\n","\n","The first ten predictions:\n"," [[0.42308196]\n"," [0.3574296 ]\n"," [0.33348426]\n"," [0.3780144 ]\n"," [0.39217046]\n"," [0.40371186]\n"," [0.43258074]\n"," [0.44997367]\n"," [0.495407  ]\n"," [0.47941676]]\n","Model and weight have stored.\n","\n","The first ten predictions:\n"," [[28.54454963]\n"," [28.39906398]\n"," [28.34600113]\n"," [28.44467988]\n"," [28.47604974]\n"," [28.50162547]\n"," [28.56559892]\n"," [28.60414166]\n"," [28.70482188]\n"," [28.66938754]]\n","\n","The first ten test data:\n"," [[28.36 ]\n"," [28.487]\n"," [28.543]\n"," [28.551]\n"," [28.602]\n"," [28.613]\n"," [28.755]\n"," [28.765]\n"," [28.58 ]\n"," [28.622]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Use existed model to do predicton"],"metadata":{"id":"JuJYSJwtyF-Q"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import MinMaxScaler\n","from keras.models import load_model\n","\n","filename = \"foreign_exchange.csv\"\n","df = pd.read_csv(filename, encoding = \"big5\")\n","USD = pd.DataFrame(df[\"美元／新台幣\"])\n","data_all = np.array(USD).astype(float)\n","\n","scaler = MinMaxScaler()\n","data_all = scaler.fit_transform(data_all)\n","\n","TIME_STEPS = 7\n","data = []\n","for i in range(len(data_all) - TIME_STEPS):\n","  data.append(data_all[i: i + TIME_STEPS + 1])\n","\n","reshaped_data = np.array(data).astype(\"float64\")\n","test_x = reshaped_data[:, :-1]\n","test_y = reshaped_data[:, -1]\n","\n","print(\"Load model RNN_model.h5\")\n","model = load_model(\"RNN_model.h5\")\n","\n","predict = model.predict(test_x)\n","predict = np.reshape(predict, (predict.size, ))\n","predict_y = scaler.inverse_transform([[i] for i in predict])\n","test_y = scaler.inverse_transform(test_y)\n","\n","plt.plot(predict_y, \"b:\")\n","plt.plot(test_y, \"r-\")\n","plt.legend([\"Predict\", \"USD exchange\"])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"Tq2GW0EWyFNE","executionInfo":{"status":"ok","timestamp":1656663179121,"user_tz":-480,"elapsed":1252,"user":{"displayName":"余明昌","userId":"16390494860865880575"}},"outputId":"6c5bd584-e34a-4390-d5c6-154a6b25f590"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Load model RNN_model.h5\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Training LSTM model"],"metadata":{"id":"RE06aIe601s3"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import MinMaxScaler\n","from keras.models import Sequential\n","from keras.layers import LSTM, Dropout, Dense\n","import matplotlib\n","\n","# set graph's font\n","matplotlib.rc('font', family='Taipei Sans TC Beta')\n","# display negative normally\n","plt.rcParams[\"axes.unicode_minus\"] = False\n","# cancel display pandas reset alarm\n","pd.options.mode.chained_assignment = None\n","\n","# import csv data\n","filename = \"foreign_exchange.csv\"\n","df = pd.read_csv(filename, encoding = \"big5\")\n","USD = pd.DataFrame(df[\"美元／新台幣\"])\n","# convert from dataframe to float, fitting training data type\n","data_all = np.array(USD).astype(float)\n","print(\"Data's shape: \", data_all.shape)\n","\n","# scale data between 0 and 1\n","scaler = MinMaxScaler()\n","data_all = scaler.fit_transform(data_all)\n","\n","# store every eight days' data in list\n","TIME_STEPS = 7\n","data = []\n","for i in range(len(data_all) - TIME_STEPS):\n","  data.append(data_all[i: i + TIME_STEPS + 1])\n","\n","# set x is the first seven days, y is the last day\n","reshaped_data = np.array(data).astype(\"float64\")\n","x = reshaped_data[:, : -1]\n","y = reshaped_data[:, -1]\n","print(\"x's shape: \", x.shape, \", y's shape: \", y.shape)\n","\n","# the first 80% is train features and labels, the last 20% is test features and labels\n","split = 0.8\n","split_boundary = int(reshaped_data.shape[0] * split)\n","train_x = x[: split_boundary]\n","test_x = x[split_boundary:]\n","train_y = y[: split_boundary]\n","test_y = y[split_boundary:]\n","print(\"Train_x's shape: \", train_x.shape, \", test_x's shape: \", test_x.shape)\n","print(\"Train_y's shape: \", train_y.shape, \", test_y's shape: \", test_y.shape)\n","\n","# construct model\n","model = Sequential()\n","\n","# load existed model's weight\n","try:\n","  model.load_weights(\"LSTM_model.weight\")\n","  print(\"Load model success, kepp training model.\")\n","except:\n","  print(\"Load model failed, train a new model.\")\n","\n","# construct simple CNN layer\n","INPUT_SIZE = 1\n","model.add(LSTM(input_shape = (TIME_STEPS, INPUT_SIZE), units = 256, unroll = False))\n","# construct dropout\n","model.add(Dropout(0.2))\n","# construct output layer\n","model.add(Dense(units = 1))\n","# display thr model\n","model.summary()\n","\n","# set the training mode\n","model.compile(loss = \"mse\", optimizer = \"adam\", metrics = [\"accuracy\"])\n","\n","# start training model\n","model.fit(train_x, train_y, batch_size = 200, epochs = 100, validation_split = 0.1, verbose = 2)\n","\n","# do prediction on test data\n","predict = model.predict(test_x)\n","print(\"\\nThe first ten predictions:\\n\", predict[0: 10])\n","\n","# store model\n","model.save(\"LSTM_model.h5\")\n","model.save_weights(\"LSTM_model.weight\")\n","print(\"Model and weight have stored.\")\n","del model\n","\n","# convert to one-dimension array\n","predict = np.reshape(predict, (predict.size, ))\n","# inverse the data\n","predict_y = scaler.inverse_transform([[i] for i in predict])\n","test_y = scaler.inverse_transform(test_y)\n","print(\"\\nThe first ten predictions:\\n\", predict_y[0: 10])\n","print(\"\\nThe first ten test data:\\n\", test_y[0: 10])\n","\n","# display the graph\n","plt.plot(predict_y, \"b:\")\n","plt.plot(test_y, \"r-\")\n","plt.legend([\"預測\", \"美金匯率\"])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"_aRZj3RC0zIm","executionInfo":{"status":"ok","timestamp":1656663450708,"user_tz":-480,"elapsed":16834,"user":{"displayName":"余明昌","userId":"16390494860865880575"}},"outputId":"35b33635-71c3-4298-fbc2-01dd12792830"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Data's shape:  (361, 1)\n","x's shape:  (354, 7, 1) , y's shape:  (354, 1)\n","Train_x's shape:  (283, 7, 1) , test_x's shape:  (71, 7, 1)\n","Train_y's shape:  (283, 1) , test_y's shape:  (71, 1)\n","Load model failed, train a new model.\n","Model: \"sequential_10\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," lstm (LSTM)                 (None, 256)               264192    \n","                                                                 \n"," dropout_10 (Dropout)        (None, 256)               0         \n","                                                                 \n"," dense_10 (Dense)            (None, 1)                 257       \n","                                                                 \n","=================================================================\n","Total params: 264,449\n","Trainable params: 264,449\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/100\n","WARNING:tensorflow:Detecting that an object or model or tf.train.Checkpoint is being deleted with unrestored values. See the following logs for the specific values in question. To silence these warnings, use `status.expect_partial()`. See https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#restorefor details about the status object returned by the restore function.\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).layer_with_weights-1.kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).layer_with_weights-1.bias\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).layer_with_weights-0.cell.kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).layer_with_weights-0.cell.recurrent_kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).layer_with_weights-0.cell.bias\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'm' for (root).layer_with_weights-1.kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'm' for (root).layer_with_weights-1.bias\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'm' for (root).layer_with_weights-0.cell.kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'm' for (root).layer_with_weights-0.cell.recurrent_kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'm' for (root).layer_with_weights-0.cell.bias\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'v' for (root).layer_with_weights-1.kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'v' for (root).layer_with_weights-1.bias\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'v' for (root).layer_with_weights-0.cell.kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'v' for (root).layer_with_weights-0.cell.recurrent_kernel\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer's state 'v' for (root).layer_with_weights-0.cell.bias\n","2/2 - 3s - loss: 0.0430 - accuracy: 0.0039 - val_loss: 0.0328 - val_accuracy: 0.0000e+00 - 3s/epoch - 1s/step\n","Epoch 2/100\n","2/2 - 0s - loss: 0.0168 - accuracy: 0.0039 - val_loss: 0.0113 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 3/100\n","2/2 - 0s - loss: 0.0051 - accuracy: 0.0039 - val_loss: 0.0038 - val_accuracy: 0.0000e+00 - 123ms/epoch - 61ms/step\n","Epoch 4/100\n","2/2 - 0s - loss: 0.0074 - accuracy: 0.0039 - val_loss: 0.0033 - val_accuracy: 0.0000e+00 - 123ms/epoch - 61ms/step\n","Epoch 5/100\n","2/2 - 0s - loss: 0.0078 - accuracy: 0.0039 - val_loss: 0.0036 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 6/100\n","2/2 - 0s - loss: 0.0036 - accuracy: 0.0039 - val_loss: 0.0069 - val_accuracy: 0.0000e+00 - 133ms/epoch - 67ms/step\n","Epoch 7/100\n","2/2 - 0s - loss: 0.0027 - accuracy: 0.0039 - val_loss: 0.0106 - val_accuracy: 0.0000e+00 - 119ms/epoch - 60ms/step\n","Epoch 8/100\n","2/2 - 0s - loss: 0.0037 - accuracy: 0.0039 - val_loss: 0.0120 - val_accuracy: 0.0000e+00 - 123ms/epoch - 61ms/step\n","Epoch 9/100\n","2/2 - 0s - loss: 0.0039 - accuracy: 0.0039 - val_loss: 0.0111 - val_accuracy: 0.0000e+00 - 119ms/epoch - 59ms/step\n","Epoch 10/100\n","2/2 - 0s - loss: 0.0034 - accuracy: 0.0039 - val_loss: 0.0087 - val_accuracy: 0.0000e+00 - 119ms/epoch - 59ms/step\n","Epoch 11/100\n","2/2 - 0s - loss: 0.0024 - accuracy: 0.0039 - val_loss: 0.0059 - val_accuracy: 0.0000e+00 - 129ms/epoch - 64ms/step\n","Epoch 12/100\n","2/2 - 0s - loss: 0.0018 - accuracy: 0.0039 - val_loss: 0.0039 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 13/100\n","2/2 - 0s - loss: 0.0020 - accuracy: 0.0039 - val_loss: 0.0031 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 14/100\n","2/2 - 0s - loss: 0.0022 - accuracy: 0.0039 - val_loss: 0.0034 - val_accuracy: 0.0000e+00 - 129ms/epoch - 64ms/step\n","Epoch 15/100\n","2/2 - 0s - loss: 0.0020 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 16/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0061 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 17/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0071 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 18/100\n","2/2 - 0s - loss: 0.0017 - accuracy: 0.0039 - val_loss: 0.0073 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 19/100\n","2/2 - 0s - loss: 0.0018 - accuracy: 0.0039 - val_loss: 0.0065 - val_accuracy: 0.0000e+00 - 113ms/epoch - 57ms/step\n","Epoch 20/100\n","2/2 - 0s - loss: 0.0017 - accuracy: 0.0039 - val_loss: 0.0053 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 21/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0044 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 22/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0042 - val_accuracy: 0.0000e+00 - 125ms/epoch - 63ms/step\n","Epoch 23/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0044 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 24/100\n","2/2 - 0s - loss: 0.0017 - accuracy: 0.0039 - val_loss: 0.0051 - val_accuracy: 0.0000e+00 - 119ms/epoch - 59ms/step\n","Epoch 25/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0058 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 26/100\n","2/2 - 0s - loss: 0.0016 - accuracy: 0.0039 - val_loss: 0.0059 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 27/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0055 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 28/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0050 - val_accuracy: 0.0000e+00 - 119ms/epoch - 60ms/step\n","Epoch 29/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0046 - val_accuracy: 0.0000e+00 - 115ms/epoch - 58ms/step\n","Epoch 30/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0046 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 31/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0047 - val_accuracy: 0.0000e+00 - 132ms/epoch - 66ms/step\n","Epoch 32/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0049 - val_accuracy: 0.0000e+00 - 115ms/epoch - 57ms/step\n","Epoch 33/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0051 - val_accuracy: 0.0000e+00 - 115ms/epoch - 58ms/step\n","Epoch 34/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0050 - val_accuracy: 0.0000e+00 - 117ms/epoch - 59ms/step\n","Epoch 35/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0047 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 36/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0046 - val_accuracy: 0.0000e+00 - 115ms/epoch - 57ms/step\n","Epoch 37/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 121ms/epoch - 60ms/step\n","Epoch 38/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0046 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 39/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0047 - val_accuracy: 0.0000e+00 - 125ms/epoch - 63ms/step\n","Epoch 40/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0049 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 41/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0047 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 42/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0044 - val_accuracy: 0.0000e+00 - 124ms/epoch - 62ms/step\n","Epoch 43/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0043 - val_accuracy: 0.0000e+00 - 119ms/epoch - 59ms/step\n","Epoch 44/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 124ms/epoch - 62ms/step\n","Epoch 45/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 115ms/epoch - 58ms/step\n","Epoch 46/100\n","2/2 - 0s - loss: 0.0015 - accuracy: 0.0039 - val_loss: 0.0044 - val_accuracy: 0.0000e+00 - 119ms/epoch - 60ms/step\n","Epoch 47/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0044 - val_accuracy: 0.0000e+00 - 130ms/epoch - 65ms/step\n","Epoch 48/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 49/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0044 - val_accuracy: 0.0000e+00 - 124ms/epoch - 62ms/step\n","Epoch 50/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0041 - val_accuracy: 0.0000e+00 - 121ms/epoch - 60ms/step\n","Epoch 51/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0040 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 52/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0040 - val_accuracy: 0.0000e+00 - 119ms/epoch - 59ms/step\n","Epoch 53/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0042 - val_accuracy: 0.0000e+00 - 125ms/epoch - 62ms/step\n","Epoch 54/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0045 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 55/100\n","2/2 - 0s - loss: 0.0014 - accuracy: 0.0039 - val_loss: 0.0046 - val_accuracy: 0.0000e+00 - 123ms/epoch - 62ms/step\n","Epoch 56/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0043 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 57/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0041 - val_accuracy: 0.0000e+00 - 114ms/epoch - 57ms/step\n","Epoch 58/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0043 - val_accuracy: 0.0000e+00 - 135ms/epoch - 67ms/step\n","Epoch 59/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0042 - val_accuracy: 0.0000e+00 - 119ms/epoch - 59ms/step\n","Epoch 60/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0041 - val_accuracy: 0.0000e+00 - 114ms/epoch - 57ms/step\n","Epoch 61/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0039 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 62/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0038 - val_accuracy: 0.0000e+00 - 114ms/epoch - 57ms/step\n","Epoch 63/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0038 - val_accuracy: 0.0000e+00 - 131ms/epoch - 66ms/step\n","Epoch 64/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0040 - val_accuracy: 0.0000e+00 - 115ms/epoch - 58ms/step\n","Epoch 65/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0042 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 66/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0041 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 67/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0036 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 68/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0033 - val_accuracy: 0.0000e+00 - 121ms/epoch - 60ms/step\n","Epoch 69/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0036 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 70/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0042 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 71/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0042 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 72/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0036 - val_accuracy: 0.0000e+00 - 129ms/epoch - 64ms/step\n","Epoch 73/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0030 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 74/100\n","2/2 - 0s - loss: 0.0013 - accuracy: 0.0039 - val_loss: 0.0033 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 75/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0038 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 76/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0038 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 77/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0036 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 78/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0034 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 79/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0033 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 80/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0034 - val_accuracy: 0.0000e+00 - 129ms/epoch - 64ms/step\n","Epoch 81/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0033 - val_accuracy: 0.0000e+00 - 123ms/epoch - 61ms/step\n","Epoch 82/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0030 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 83/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0032 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 84/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0035 - val_accuracy: 0.0000e+00 - 116ms/epoch - 58ms/step\n","Epoch 85/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0036 - val_accuracy: 0.0000e+00 - 114ms/epoch - 57ms/step\n","Epoch 86/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0032 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 87/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0029 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 88/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0030 - val_accuracy: 0.0000e+00 - 127ms/epoch - 64ms/step\n","Epoch 89/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0031 - val_accuracy: 0.0000e+00 - 117ms/epoch - 59ms/step\n","Epoch 90/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0028 - val_accuracy: 0.0000e+00 - 125ms/epoch - 63ms/step\n","Epoch 91/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0027 - val_accuracy: 0.0000e+00 - 118ms/epoch - 59ms/step\n","Epoch 92/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0032 - val_accuracy: 0.0000e+00 - 117ms/epoch - 59ms/step\n","Epoch 93/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0035 - val_accuracy: 0.0000e+00 - 123ms/epoch - 61ms/step\n","Epoch 94/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0029 - val_accuracy: 0.0000e+00 - 122ms/epoch - 61ms/step\n","Epoch 95/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0024 - val_accuracy: 0.0000e+00 - 120ms/epoch - 60ms/step\n","Epoch 96/100\n","2/2 - 0s - loss: 0.0012 - accuracy: 0.0039 - val_loss: 0.0028 - val_accuracy: 0.0000e+00 - 125ms/epoch - 62ms/step\n","Epoch 97/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0034 - val_accuracy: 0.0000e+00 - 115ms/epoch - 58ms/step\n","Epoch 98/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0031 - val_accuracy: 0.0000e+00 - 124ms/epoch - 62ms/step\n","Epoch 99/100\n","2/2 - 0s - loss: 0.0011 - accuracy: 0.0039 - val_loss: 0.0026 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","Epoch 100/100\n","2/2 - 0s - loss: 0.0010 - accuracy: 0.0039 - val_loss: 0.0028 - val_accuracy: 0.0000e+00 - 117ms/epoch - 58ms/step\n","\n","The first ten predictions:\n"," [[0.42076525]\n"," [0.40914002]\n"," [0.3837668 ]\n"," [0.37011552]\n"," [0.37582332]\n"," [0.39771634]\n"," [0.42503986]\n"," [0.45074177]\n"," [0.47317815]\n"," [0.48186848]]\n","Model and weight have stored.\n","\n","The first ten predictions:\n"," [[28.5394158 ]\n"," [28.51365429]\n"," [28.45742723]\n"," [28.42717599]\n"," [28.43982447]\n"," [28.48833942]\n"," [28.54888832]\n"," [28.60584376]\n"," [28.65556278]\n"," [28.67482054]]\n","\n","The first ten test data:\n"," [[28.36 ]\n"," [28.487]\n"," [28.543]\n"," [28.551]\n"," [28.602]\n"," [28.613]\n"," [28.755]\n"," [28.765]\n"," [28.58 ]\n"," [28.622]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}